
configure(allprojects) {
  apply plugin: 'java'

  version = '1.2'
  group = 'org.openmuc'

  repositories {
    mavenCentral()  
    flatDir {
      dirs 'dependencies'
    }
  }
}

configure(subprojects) {

  apply plugin: 'eclipse'
  apply plugin: 'osgi'
  apply plugin: 'maven'
  apply plugin: 'signing'

  sourceCompatibility = 1.6
  targetCompatibility = 1.6

  dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
  }

  uploadArchives {
    repositories {
      mavenDeployer {
	beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

	repository(url: project.properties.sonatypeRepository) {
	  authentication(userName: project.properties.sonatypeUser, password: project.properties.sonatypePass)
	}
	snapshotRepository(url: project.properties.sonatypeSnapshotRepository) {
	  authentication(userName: project.properties.sonatypeUser, password: project.properties.sonatypePass)
	}
	
	pom.project {
	  scm {
	    url 'none'
	    connection 'none'
	  }

	  developers {
	    developer {
	      id 'sfeuerhahn'
	      name 'Stefan Feuerhahn'
	    }
	  }
	}
      }
    }
  }

  task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
  }

  artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
  }

  signing {
    if ( hasProperty('project.properties.signing.keyId') ) {
      sign configurations.archives
    }
  }

  task copyLibs(type: Copy) {
    dependsOn(configurations.default.getAllArtifacts().getBuildDependencies())

    into "build/lib"
    from configurations.default
    from configurations.default.getAllArtifacts().getFiles()
  }

  build.dependsOn(copyLibs)

  eclipse.pathVariables([GRADLE_USER_HOME:file(gradle.gradleUserHomeDir)])
  tasks.eclipse.dependsOn(cleanEclipse)

}

jar.enabled = false

task (tar, type: Tar) {
  dependsOn(subprojects.build)
  dependsOn(subprojects.javadoc)

  compression = Compression.GZIP

  into(project.archivesBaseName) {
    from('./') {
      include 'jasn1-ber/src/**/*'
      include 'jasn1-ber/build/lib/**/*'
      include 'jasn1-ber/build/docs/**/*'
      include 'jasn1-compiler/src/**/*'
      include 'jasn1-compiler/grammatic/**/*'
      include 'jasn1-compiler/build/lib/**/*'
      include 'jasn1-compiler/build/docs/**/*'
      include 'jasn1-compiler/build.gradle'
      include 'jasn1-compiler/dependencies/**/*'
      include 'doc/**/*'
      include 'licenses/**/*'
      include 'sample/**/*.java'
      include 'sample/**/*.txt'
      include 'sample/**/*.asn'
      include 'build.gradle'
      include 'settings.gradle'
    }
    from('./') {
      fileMode = 0755
      include 'jasn1-compiler/run-scripts/**/*'
    }
 
  }
}

